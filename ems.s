;
; File generated by cc65 v 2.19 - Git b993d8833
;
	.fopt		compiler,"cc65 v 2.19 - Git b993d8833"
	.setcpu		"6502"
	.smart		on
	.autoimport	on
	.case		on
	.debuginfo	off
	.importzp	sp, sreg, regsave, regbank
	.importzp	tmp1, tmp2, tmp3, tmp4, ptr1, ptr2, ptr3, ptr4
	.macpack	longbranch
	.forceimport	__STARTUP__
	.import		_pal_bg
	.import		_pal_col
	.import		_ppu_off
	.import		_ppu_on_all
	.import		_ppu_system
	.import		_vram_adr
	.import		_vram_put
	.export		_palette
	.export		_put_str
	.export		_main

.segment	"RODATA"

_palette:
	.byte	$0F
	.byte	$00
	.byte	$10
	.byte	$30
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
S0003:
	.byte	$56,$49,$44,$45,$4F,$20,$4D,$4F,$44,$45,$3A,$00
S0002:
	.byte	$47,$4F,$20,$47,$41,$54,$4F,$52,$53,$21,$00
S0004:
	.byte	$4E,$54,$53,$43,$00
S0005:
	.byte	$50,$41,$4C,$00

; ---------------------------------------------------------------
; void __near__ put_str (unsigned int adr, const char *str)
; ---------------------------------------------------------------

.segment	"CODE"

.proc	_put_str: near

.segment	"CODE"

;
; void put_str(unsigned int adr, const char* str){
;
	jsr     pushax
;
; vram_adr(adr);
;
	ldy     #$03
	lda     (sp),y
	tax
	dey
	lda     (sp),y
	jsr     _vram_adr
;
; if(!*str)break;
;
L0002:	ldy     #$01
	lda     (sp),y
	sta     ptr1+1
	dey
	lda     (sp),y
	sta     ptr1
	lda     (ptr1),y
	beq     L0003
;
; vram_put((*str++));
;
	iny
	lda     (sp),y
	sta     ptr1+1
	dey
	lda     (sp),y
	sta     ptr1
	lda     (ptr1),y
	pha
	ldx     #$00
	lda     #$01
	jsr     addeq0sp
	pla
	jsr     _vram_put
;
; while(1){
;
	jmp     L0002
;
; }
;
L0003:	jmp     incsp4

.endproc

; ---------------------------------------------------------------
; void __near__ main (void)
; ---------------------------------------------------------------

.segment	"CODE"

.proc	_main: near

.segment	"CODE"

;
; ppu_off(); // screen off
;
	jsr     _ppu_off
;
; pal_bg(palette); // load the BG palette
;
	lda     #<(_palette)
	ldx     #>(_palette)
	jsr     _pal_bg
;
; pal_col(1, 0x30);
;
	lda     #$01
	jsr     pusha
	lda     #$30
	jsr     _pal_col
;
; put_str(NTADR_A(2, 2), "GO GATORS!");
;
	ldx     #$20
	lda     #$42
	jsr     pushax
	lda     #<(S0002)
	ldx     #>(S0002)
	jsr     _put_str
;
; put_str(NTADR_A(2, 4), "VIDEO MODE:");
;
	ldx     #$20
	lda     #$82
	jsr     pushax
	lda     #<(S0003)
	ldx     #>(S0003)
	jsr     _put_str
;
; if(ppu_system()) put_str(NTADR_A(2, 5), "NTSC");
;
	jsr     _ppu_system
	tax
	beq     L0002
	ldx     #$20
	lda     #$A2
	jsr     pushax
	lda     #<(S0004)
	ldx     #>(S0004)
;
; else put_str(NTADR_A(2, 5), "PAL");
;
	jmp     L0008
L0002:	ldx     #$20
	lda     #$A2
	jsr     pushax
	lda     #<(S0005)
	ldx     #>(S0005)
L0008:	jsr     _put_str
;
; ppu_on_all(); // turn on screen
;
	jsr     _ppu_on_all
;
; while (1);
;
L0007:	jmp     L0007

.endproc

